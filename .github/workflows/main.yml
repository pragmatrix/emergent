name: Rust
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
        rust: [stable, beta]
      fail-fast: false

    steps:
    - name: Install Rust
      uses: hecrj/setup-rust-action@master
      with:
        rust-version: ${{ matrix.rust }}

    - name: Install Clippy
      run: |
        rustup component add clippy
      shell: bash

    - uses: actions/checkout@master
      with:
        submodules: recursive

    - name: Install Ninja (needed for shaderc-sys, Windows only)
      run: |
        choco install ninja
      if: runner.os == 'Windows'

    - name: Install LLVM (Windows only)
      run: |
        choco install llvm
      if: runner.os == 'Windows'

    - name: Ninja --version (Windows only)
      run: |
        ninja --version
      if: runner.os == 'Windows'

    - name: Setup Python 2 (Windows only)
      uses: actions/setup-python@v1
      with:
        python-version: '2.7.17'
      if: runner.os == 'Windows'

    - name: Uninstall LLVM (macOS only, conflicts with preinstalled Apple CLang)
      run: brew uninstall llvm
      shell: bash
      if: runner.os == 'macOS'

    - name: Install Mesa (Linux only)
      run: sudo apt-get install libgl1-mesa-dev
      shell: bash
      if: runner.os == 'Linux'
   
    - name: Build
      run: cargo build -vv --release
      shell: bash

#    - name: Run Clippy
#      run: cargo clippy -vv --release --workspace
#      shell: bash

    - name: Run Tests
      run: cargo test -vv --release --workspace -- --test-threads 1
      shell: bash

  rustfmt:
    name: Check Rust Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive
      - name: Install Rust
        run: rustup update stable && rustup default stable && rustup component add rustfmt
      - run: cargo fmt -- --check
